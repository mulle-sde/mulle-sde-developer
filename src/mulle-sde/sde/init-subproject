#! /usr/bin/env bash
#
#   Copyright (c) 2018 Nat! - Mulle kybernetiK
#   All rights reserved.
#
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions are met:
#
#   Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
#   Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
#   Neither the name of Mulle kybernetiK nor the names of its contributors
#   may be used to endorse or promote products derived from this software
#   without specific prior written permission.
#
#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#   POSSIBILITY OF SUCH DAMAGE.
#
[ "${TRACE}" = 'YES' ] && set -x && : "$0" "$@"



main()
{
   local marks

   local OPTION_REMOVE='NO'

   while [ $# -ne 0 ]
   do
      if options_technical_flags "$1"
      then
         shift
         continue
      fi

      case "$1" in
         -f)
            MULLE_FLAG_MAGNUM_FORCE='YES'
         ;;

         --remove)
            OPTION_REMOVE='YES'
         ;;

         --marks)
            [ "$#" -eq 1 ] && usage "Missing argument to \"$1\""
            shift

            marks="$1"
         ;;

         --parent-dir)
            [ "$#" -eq 1 ] && usage "Missing argument to \"$1\""
            shift

            PARENT_DIR="$1"
         ;;

         -*)
            fail "Unknown option \"$1\""
         ;;

         *)
            break
         ;;
      esac

      shift
   done

   options_setup_trace "${MULLE_TRACE}" && set -x

   [ -z "${PARENT_DIR}" ] && fail 'PARENT_DIR is undefined'
   [ -z "${PWD}" ]        && fail 'PWD is undefined'

   local parent_dir
   local subproject_dir

   r_simplified_absolutepath "${PARENT_DIR}"
   parent_dir="${RVAL}"

   r_simplified_absolutepath "${PWD}"
   subproject_dir="${RVAL}"

   local relative

   r_relative_path_between "${subproject_dir}" "${parent_dir}" || exit 1
   relative="${RVAL}"

   #
   # Tell parent to ignore our sources, subproject manages itself
   #
   (
      cd "${PARENT_DIR}"
      PHYSPWD="`pwd -P`"
      if [ "${OPTION_REMOVE}" = "YES" ]
      then
         # remove plugin from parent searches
         MULLE_VIRTUAL_ROOT="${PHYSPWD}" \
            mulle-env ${MULLE_TECHNICAL_FLAGS}  \
                  environment \
                        --scope global \
                     set \
                        --remove MULLE_MATCH_IGNORE_PATH \
                        "${relative}"
      else
         MULLE_VIRTUAL_ROOT="${PHYSPWD}" \
            mulle-env ${MULLE_TECHNICAL_FLAGS}  \
                  environment \
                        --scope global \
                     set \
                        --add MULLE_MATCH_IGNORE_PATH \
                        "${relative}"
      fi
   )
}


_fatal()
{
   echo "$0 fatal error: $*" >&2
   exit 1
}

_init()
{
   if [ -z "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}" ]
   then
      MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions-env "libexec-dir" 2> /dev/null`"
      [ -z "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}" ] && \
         _fatal "mulle-bashfunctions-env not installed"
   fi

   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh"  || exit 1
}


MULLE_EXECUTABLE="${MULLE_EXECUTABLE:-${BASH_SOURCE[0]:-${(%):-%x}}}"

_init "$@"

main "$@"
