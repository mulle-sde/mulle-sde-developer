#! /usr/bin/env bash
#
#   Copyright (c) 2018 Nat! - Mulle kybernetiK
#   All rights reserved.
#
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions are met:
#
#   Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
#   Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
#   Neither the name of Mulle kybernetiK nor the names of its contributors
#   may be used to endorse or promote products derived from this software
#   without specific prior written permission.
#
#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#   POSSIBILITY OF SUCH DAMAGE.
#
[ "${TRACE}" = 'YES' ] && set -x && : "$0" "$@"


#
# This script gets run by cmake via "Motd.cmake"
#
r_emit_executable_motd()
{
   log_entry "emit_executable_motd" "$@"

   local kitchendir="$1"
   local name="$2"

   local filepath

   r_filepath_concat "${kitchendir}" "${name}"
   filepath="${RVAL}"
   printf -v RVAL "%b\n%b" "${C_INFO}Run your executable:${C_RESET}" \
                     "${C_BOLD}   ${filepath#${MULLE_VIRTUAL_ROOT}/}${C_RESET}"
}


r_emit_library_motd()
{
   log_entry "emit_library_motd" "$@"

   # nothing yet
   RVAL=""
   :
}


main()
{
   local OPTION_APPEND='NO'

   while [ $# -ne 0 ]
   do
      if options_technical_flags "$1"
      then
         shift
         continue
      fi

      case "$1" in
         --append)
            OPTION_APPEND='YES'
            shift
            continue
         ;;
      esac

      break
   done

   options_setup_trace "${MULLE_TRACE}" && set -x

   local buildtype="$1"
   local kitchendir="$2"
   local name="$3"

   case "${buildtype}" in
      library)
         r_emit_executable_motd "$2" "$3"
         text="${RVAL}"
      ;;

      executable)
         r_emit_executable_motd "$2" "$3"
         text="${RVAL}"
      ;;

      *)
         log_verbose "Unknown buildtype \"${buildtype}\", ignoring it"
      ;;
   esac

   if [ ! -z "${text}" ]
   then
      if [ "${OPTION_APPEND}" = 'YES' ]
      then
         log_fluff "Appending to motd..."
         redirect_append_exekutor "${kitchendir}/.motd" printf "%s\n" "${text}"
      else
         log_fluff "Writing motd..."
         redirect_exekutor "${kitchendir}/.motd" printf "%s\n" "${text}"
      fi
   fi
}


_fatal()
{
   echo "$0 fatal error: $*" >&2
   exit 1
}

_init()
{
   MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions-env "libexec-dir" 2> /dev/null`"
   [ -z "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}" ] && \
            _fatal "mulle-bashfunctions-env not installed"

   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions-minimal.sh"  \
   _fatal "failed to load mulle-bashfunctions-minimal.sh from ${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}"
}


MULLE_EXECUTABLE="${MULLE_EXECUTABLE:-${BASH_SOURCE[0]:-${(%):-%x}}}"

_init "$@"

main "$@"
