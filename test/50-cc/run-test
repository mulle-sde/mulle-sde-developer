#! /bin/sh

[ "${TRACE}" = 'YES' ] && set -x && : "$0" "$@"

###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###
MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions libexec-dir`" || exit 1
export MULLE_BASHFUNCTIONS_LIBEXEC_DIR
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-boot.sh"          || exit 1
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" || exit 1
###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###


run_mulle_sde()
{
   log_verbose "####################################"
   log_verbose mulle-sde ${MULLE_SDE_FLAGS} "$@"
   log_verbose "####################################"

   exekutor mulle-sde ${MULLE_SDE_FLAGS} "$@"
}


expect()
{
   local expected="$1"
   local filename="$2"

   local result

   result="`cat "${filename}"`"
   log_debug "${filename}: ${result}"
   if [ "${expected}" != "${result}" ]
   then
      fail "${filename}: \"${result}\" != \"${expected}\""
   fi
}


main()
{
   MULLE_SDE_FLAGS="$@"

   _options_mini_main "$@" && set -x

   export MULLE_SDE_EXTENSION_PATH

   local directory

   r_make_tmp_directory
   directory="${RVAL:-/tmp/build}"

   local foo_cc
   local cc
   local text

   case "${MULLE_UNAME}" in
      'mingw')
         foo_cc=foo-cc.bat
         cc=cl.exe
         text="`cat <<EOF
${cc} %*
EOF`"
      ;;

      'msys')
         foo_cc=foo-cc.bat
         cc=gcc.exe
         text="`cat <<EOF
${cc} %*
EOF`"
      ;;

      *)
         foo_cc=foo-cc
         cc=gcc            # finagle this
         if ! command -v "${cc}" > /dev/null
         then
            cc=cc
         fi

         text="`cat <<EOF
#! /bin/sh -x
#
# can't use [C][C] here as cmake greps for it and then hangs
#
exec ${cc} "\\\$@"
EOF`"
      ;;
   esac


   #
   # this tests that the definition for CC is used by a but not by b
   #
   run_mulle_sde init --no-post-init -d "${directory}/b" -m mulle-sde/c-developer library || exit 1

   run_mulle_sde init --no-post-init -d "${directory}/a" -m mulle-sde/c-developer executable || exit 1
   (
      cd "${directory}/a" &&
      run_mulle_sde dependency add b &&
      mkdir bin &&

      printf "%s\n" "${text}" > bin/${foo_cc} || exit 1
      chmod 755 bin/${foo_cc} &&
      run_mulle_sde environment set PATH "\${PWD}/bin:\${PATH}" &&
      run_mulle_sde definition set CC ${foo_cc}

      run_mulle_sde craft
   ) || exit 1

   set -o pipefail
   (
      errors=0

      cd "${directory}/a" &&
      run_mulle_sde -s log | grep -E -q ${foo_cc}
      if [ $? -ne 0 ]
      then
         log_error "${foo_cc} was not used"
         errors=$((errors + 1))
      fi

      run_mulle_sde -s log b | grep -E -q ${foo_cc}
      if [ $? -eq 0 ]
      then
         log_error "${foo_cc} was mistakenly used"
         errors=$((errors + 1))
      fi

      [ ${errors} -ne 0 ] && _internal_fail "failed"
   ) || exit 1

   log_verbose "----- #1 PASSED -----"

   log_info "----- ALL PASSED -----"

   cd /
   rmdir_safer "${directory}"
}



init()
{
   MULLE_SDE_EXTENSION_PATH="${PWD}/../../src:${MULLE_SDE_EXTENSION_PATH}"
}

init "$@"
main "$@"

